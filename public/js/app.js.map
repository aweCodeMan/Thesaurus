{"version":3,"sources":["app.js","components/AddLinkedWord/AddLinkedWordDirective.js","components/RemoveLinkedWord/RemoveLinkedWordDirective.js","components/ConfirmModal/DeleteWordModalFactory.js","components/ConfirmModal/DeleteWordModalInstanceController.js","components/SearchWord/SearchWordDirective.js","components/SearchWord/WordsService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["angular.module('thesaurus', ['ui.bootstrap']);\r\n\r\nangular.module('thesaurus').config(function ($httpProvider)\r\n                                   {\r\n                                       $httpProvider.defaults.headers.common[\"X-Requested-With\"] = 'XMLHttpRequest';\r\n                                   });","angular.module('thesaurus')\n  .directive('addLinkedWord', function ()\n             {\n                 return {\n                     restrict:    'E',\n                     scope:       {\n                         url:             '@',\n                         type:            '@',\n                         word:            '=',\n                         urlAutocomplete: '@'\n                     },\n                     controller:  function ($scope, $http, Words)\n                     {\n                         $scope.showForm = false;\n                         $scope.toggleForm = function () {$scope.showForm = !$scope.showForm;};\n\n                         $scope.getWords = function (word) {return Words.getWords(word, $scope.urlAutocomplete);};\n\n                         $scope.sendLinkedWord = function (model)\n                         {\n                             if (model)\n                             {\n                                 $scope.disable = true;\n                                 $scope.loading = true;\n                                 $scope.error = undefined;\n\n                                 $http.post($scope.url, {\n                                     wordId:       $scope.word.id,\n                                     linkedWordId: model.id,\n                                     type:         $scope.type\n                                 }).then(function (success)\n                                         {\n                                             window.location.reload();\n                                         }, function (error)\n                                         {\n                                             $scope.disable = false;\n                                             $scope.loading = false;\n                                             $scope.error = getError($scope.word, model, $scope.type);\n                                         });\n                             }\n                         };\n\n                         function getError(word, linkedWord, type)\n                         {\n                             if (word.id == linkedWord.id)\n                             {\n                                 if (type == 1)\n                                 {\n                                     return 'Beseda ne more biti sopomenka sama sebi.';\n                                 }\n                                 else\n                                 {\n                                     return 'Beseda ne more biti protipomenka sama sebi.';\n                                 }\n                             }\n\n                             return 'Prišlo je do napake pri pošiljanju podatkov. Prosim poskusite znova.';\n                         }\n                     },\n                     templateUrl: '/templates/AddLinkedWord.html'\n                 };\n             });","angular.module('thesaurus')\n  .directive('removeLinkedWord', function ()\n             {\n                 return {\n                     restrict:   'E',\n                     scope:      {\n                         word:       '=',\n                         linkedWord: '=',\n                         type:       '@',\n                         url:        '@'\n                     },\n                     controller: function ($scope, DeleteWordModal)\n                     {\n                         $scope.remove = function ()\n                         {\n                             DeleteWordModal.openModal($scope.word, $scope.linkedWord, $scope.type, $scope.url).then(function (success)\n                                                                                                                     {\n                                                                                                                         window.location.reload();\n                                                                                                                     });\n                         }\n                     },\n                     template:   '<span class=\"glyphicon glyphicon-trash remove-linked-word\" ng-click=\"remove()\"></span>'\n                 };\n             })\n;\n","angular.module('thesaurus')\n  .factory('DeleteWordModal', function ($modal)\n           {\n               var modal = {\n                   openModal: function (word, linkedWord, type, url)\n                   {\n                       var instance = $modal.open({\n                                                      templateUrl: '/templates/DeleteWordModal.html',\n                                                      controller:  'DeleteWordModalInstanceController',\n                                                      resolve:     {\n                                                          word:       function () {return word;},\n                                                          linkedWord: function () {return linkedWord;},\n                                                          type:       function () {return type},\n                                                          url:        function () {return url}\n                                                      }\n                                                  });\n\n                       return instance.result;\n                   }\n\n               };\n\n               return modal;\n           });\n","angular.module('thesaurus')\n  .controller('DeleteWordModalInstanceController', function ($scope, $modalInstance, $http, word, linkedWord, type, url)\n              {\n\n                  $scope.word = word;\n                  $scope.linkedWord = linkedWord;\n                  $scope.type = type;\n\n                  $scope.ok = function ()\n                  {\n                      $scope.disabled = true;\n                      $scope.error = undefined;\n\n                      $http.post(url, {\n                          _method:      'DELETE',\n                          confirmation: $scope.confirm,\n                          linkedWordId: linkedWord.id,\n                          wordId:       word.id,\n                          type:         type\n                      }).then(function (success)\n                              {\n                                  $modalInstance.close();\n                              },\n                              function (error)\n                              {\n                                  $scope.disabled = false;\n                                  $scope.error = 'Prišlo je do napake pri pošiljanju podatkov. Prosim poskusite znova.'\n                              });\n                  };\n\n                  $scope.cancel = function ()\n                  {\n                      $modalInstance.dismiss();\n                  };\n              });\n","/**\r\n * @ngdoc directive\r\n * @name SearchWord\r\n *\r\n * @description\r\n * An autocomplete search bar.\r\n *\r\n * @restrict A\r\n * */\r\nangular.module('thesaurus')\r\n  .directive('searchWord', function ()\r\n             {\r\n                 return {\r\n                     restrict:    'E',\r\n                     scope:       {\r\n                         url:         '@',\r\n                         size:        '@',\r\n                         placeholder: '@'\r\n                     },\r\n                     controller:  function ($scope, $http, Words)\r\n                     {\r\n                         var words = [];\r\n\r\n                         $scope.selectModel = function (model)\r\n                         {\r\n                             window.location.href = model.link;\r\n                         };\r\n\r\n                         $scope.getWords = function (word)\r\n                         {\r\n                             words = [];\r\n                             return Words.getWords(word, $scope.url).then(function (success)\r\n                                                                          {\r\n                                                                              words = success;\r\n                                                                              return success;\r\n                                                                          }, function (error)\r\n                                                                          {\r\n                                                                              return error;\r\n                                                                          });\r\n                         };\r\n\r\n                         $scope.onEnter = function (query, event)\r\n                         {\r\n                             if (event.keyCode == 13 && !$scope.loadingWords)\r\n                             {\r\n                                 words.forEach(function (item)\r\n                                               {\r\n                                                   if (item.word.toLowerCase() == query.toLowerCase())\r\n                                                   {\r\n                                                       window.location.href = item.link;\r\n                                                   }\r\n                                               });\r\n                             }\r\n                         };\r\n                     },\r\n                     link:        function (scope, elem, attr)\r\n                     {\r\n\r\n                         if (scope.size && scope.size.toLowerCase() == 'large')\r\n                         {\r\n                             elem.addClass('search-large');\r\n                         }\r\n                     },\r\n                     templateUrl: '/templates/SearchWord.html'\r\n                 };\r\n             });\r\n","angular.module('thesaurus')\n  .factory('Words', function ($http)\n           {\n\n               return {\n                   getWords: function (word, url) {return getWords(word, url)}\n               };\n\n               function getWords(word, url)\n               {\n                   return $http.get(url, {\n                       params: {\n                           query: word\n                       }\n                   }).then(function (response)\n                           {\n                               if (response.data.length == 0)\n                               {\n                                   response.data.push({word: '', link: 'beseda/' + word, empty: true});\n                                   return response.data;\n                               }\n\n                               return response.data.map(function (item)\n                                                        {\n                                                            item.typeaheadDefinition = getFirstDefinition(item.definitions);\n                                                            return item;\n                                                        });\n                           });\n               }\n\n               function getFirstDefinition(definitions)\n               {\n                   if (!definitions)\n                   {\n                       return '';\n                   }\n\n                   var definition = definitions.split(/:/);\n\n                   if (definition && definition[0])\n                   {\n                       return definition[0];\n                   }\n\n                   return '';\n               }\n           });\n\n"],"sourceRoot":"/source/"}